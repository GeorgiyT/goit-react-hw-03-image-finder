{"version":3,"sources":["components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Searchbar/Searchbar.js","components/Services/Services.js","components/Modal/Modal.js","components/Loader/Loader.js","components/App.js","index.js"],"names":["Button","clickFunction","type","className","onClick","ImageGallery","children","ImageGalleryItem","webformatURL","queryName","clickFunk","src","alt","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","setQuery","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","Component","fetchPictures","query","page","axios","get","Modal","image","text","SetLoader","color","height","width","App","imagesArr","activePage","isLoaded","modalUrl","openModal","getFetch","then","responce","prevState","data","hits","map","hit","id","randId","largeImageURL","catch","error","console","log","finally","onSearch","searchOption","onLoadMore","listClickFunc","bigPicUrl","find","item","window","addEventListener","closeModal","currentTarget","code","removeEventListener","prevProps","imageList","scrollTo","top","document","documentElement","scrollHeight","behavior","length","React","ReactDOM","render","StrictMode","getElementById"],"mappings":"4PAeeA,EAZA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChB,OACE,wBAAQC,KAAK,SAASC,UAAU,SAASC,QAASH,EAAlD,wBCMWI,EARM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAO,oBAAIH,UAAU,eAAd,SAA8BG,KCaxBC,EAdU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACnD,OACE,oBAAIP,UAAU,mBAAmBC,QAASM,EAA1C,SACE,qBAAKC,IAAKH,EAAcI,IAAKH,EAAWN,UAAU,8BCsCzCU,E,4MAxCbC,MAAQ,CACNC,WAAY,I,EAOdC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAGvCC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,a,4CAGjC,WACE,OACE,wBAAQZ,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAasB,SAAUC,KAAKL,aAA5C,UACE,wBAAQnB,KAAK,SAASC,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVD,KAAK,OACLyB,aAAa,MACbC,WAAS,EACTC,YAAY,2BAEZC,SAAUJ,KAAKV,wB,GAjCHe,a,iBCOTC,EANO,SAACC,EAAOC,GAC5B,OAAOC,IAAMC,IAAN,4EACgEH,EADhE,iBAC8EC,EAD9E,qBAHQ,MCiBFG,EAhBD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAM7B,EAAgB,EAAhBA,UAC5B,OACE,qBAAKP,UAAU,UAAUC,QAASM,EAAlC,SACE,qBAAKP,UAAU,QAAf,SACE,qBAAKQ,IAAK2B,EAAO1B,IAAK2B,S,iCCAfC,EAJG,WAChB,OAAO,cAAC,IAAD,CAAQtC,KAAK,OAAOuC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OCmGlDC,E,4MA5Fb9B,MAAQ,CACNmB,MAAO,GACPY,UAAW,GACXC,WAAY,EACZC,UAAU,EACVC,SAAU,GACVC,WAAW,G,EASbC,SAAW,WACT,EAAKhC,SAAS,CAAE6B,UAAU,IAC1Bf,EAAc,EAAKlB,MAAMmB,MAAO,EAAKnB,MAAMgC,YACxCK,MAAK,SAAAC,GAAQ,OACZ,EAAKlC,UAAS,SAAAmC,GAAS,MAAK,CAC1BR,UAAU,GAAD,mBACJQ,EAAUR,WADN,YAEJO,EAASE,KAAKC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAChCC,GAAIC,cACJnD,aAAciD,EAAIjD,aAClBoD,cAAeH,EAAIG,2BAK1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BG,SAAQ,WACP,EAAK/C,SAAS,CAAE6B,UAAU,Q,EAIhCmB,SAAW,SAAAC,GACT,EAAKjD,SAAS,CAAEe,MAAOkC,EAActB,UAAW,GAAIC,WAAY,K,EAGlEsB,WAAa,WACX,EAAKlD,UAAS,SAAAmC,GAAS,MAAK,CAC1BP,WAAYO,EAAUP,WAAa,O,EAIvCuB,cAAgB,SAAAX,GACd,IAAMY,EAAY,EAAKxD,MAAM+B,UAAU0B,MAAK,SAAAjC,GAAK,OAAIA,EAAMoB,KAAOA,KAAIE,cACtE,EAAKX,UAAUqB,I,EAGjBrB,UAAY,SAAAuB,GACV,EAAKtD,SAAS,CAAE8B,SAAUwB,EAAMvB,WAAW,IAC3CwB,OAAOC,iBAAiB,UAAW,EAAKC,a,EAG1CA,WAAa,SAAA1D,GACPA,EAAEE,SAAWF,EAAE2D,eAA4B,WAAX3D,EAAE4D,MAAmB,EAAK3D,SAAS,CAAE8B,SAAU,GAAIC,WAAW,IAClGwB,OAAOK,oBAAoB,UAAW,EAAKH,a,wDAjD7C,SAAmBI,EAAW1B,GACxBA,EAAUpB,QAAUP,KAAKZ,MAAMmB,OAASoB,EAAUP,aAAepB,KAAKZ,MAAMgC,YAC9EpB,KAAKwB,a,oBAkDT,WAAU,IAAD,OACD8B,EAAYtD,KAAKZ,MAAM+B,UAAUW,KAAI,SAAAlB,GAAK,OAC9C,cAAC,EAAD,CAEE9B,aAAc8B,EAAM9B,aACpBC,UAAW,EAAKK,MAAMmB,MACtBvB,UAAW,WACT,EAAK2D,cAAc/B,EAAMoB,MAJtBpB,EAAMoB,OAgBf,OAP8B,IAA1BhC,KAAKZ,MAAMgC,YACb2B,OAAOQ,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAKZ,qCACE,cAAC,EAAD,CAAW9D,SAAUE,KAAKwC,WAC1B,cAAC,EAAD,UAAec,IACdtD,KAAKZ,MAAM+B,UAAU0C,QAAU7D,KAAKZ,MAAMiC,SAAW,cAAC,EAAD,CAAQ9C,cAAeyB,KAAK0C,aAAiB,IACjG1C,KAAKZ,MAAMiC,UAAY,cAAC,EAAD,IACxBrB,KAAKZ,MAAMmC,WAAa,cAAC,EAAD,CAAOX,MAAOZ,KAAKZ,MAAMkC,SAAUT,KAAMb,KAAKZ,MAAMmB,MAAOvB,UAAWgB,KAAKiD,oB,GAvF1Fa,IAAMzD,W,YCJxB0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.84ef59df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ clickFunction }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={clickFunction}>\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  clickFunction: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, queryName, clickFunk }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={clickFunk}>\r\n      <img src={webformatURL} alt={queryName} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  queryName: PropTypes.string.isRequired,\r\n  clickFunk: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\"\r\n  };\r\n\r\n  static propTypes = {\r\n    setQuery: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.setQuery(this.state.inputValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            // value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst PER_PAGE = 12;\r\n\r\nconst fetchPictures = (query, page) => {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?key=21145461-ec858c83a87163ad119fff078&q=${query}&page=${page}&per_page=${PER_PAGE}`\r\n  );\r\n};\r\n\r\nexport default fetchPictures;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ image, text, clickFunk }) => {\r\n  return (\r\n    <div className=\"Overlay\" onClick={clickFunk}>\r\n      <div className=\"Modal\">\r\n        <img src={image} alt={text} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  clickFunk: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Modal;\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst SetLoader = () => {\r\n  return <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\r\n};\r\n\r\nexport default SetLoader;\r\n","import React from \"react\";\r\nimport Button from \"./Button/Button\";\r\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport Searchbar from \"./Searchbar/Searchbar\";\r\nimport fetchPictures from \"./Services/Services.js\";\r\nimport Modal from \"./Modal/Modal\";\r\nimport { v4 as randId } from \"uuid\";\r\nimport SetLoader from \"./Loader/Loader\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    query: \"\",\r\n    imagesArr: [],\r\n    activePage: 1,\r\n    isLoaded: true,\r\n    modalUrl: \"\",\r\n    openModal: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.query !== this.state.query || prevState.activePage !== this.state.activePage) {\r\n      this.getFetch();\r\n    }\r\n  }\r\n\r\n  getFetch = () => {\r\n    this.setState({ isLoaded: false });\r\n    fetchPictures(this.state.query, this.state.activePage)\r\n      .then(responce =>\r\n        this.setState(prevState => ({\r\n          imagesArr: [\r\n            ...prevState.imagesArr,\r\n            ...responce.data.hits.map(hit => ({\r\n              id: randId(), //Непонятно почему, но с айдишниками из БД показывает ошибку на повторяющиеся айди, возможно они там уникальны только на 1 страницу\r\n              webformatURL: hit.webformatURL,\r\n              largeImageURL: hit.largeImageURL\r\n            }))\r\n          ]\r\n        }))\r\n      )\r\n      .catch(error => console.log(error))\r\n      .finally(() => {\r\n        this.setState({ isLoaded: true });\r\n      });\r\n  };\r\n\r\n  onSearch = searchOption => {\r\n    this.setState({ query: searchOption, imagesArr: [], activePage: 1 });\r\n  };\r\n\r\n  onLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      activePage: prevState.activePage + 1\r\n    }));\r\n  };\r\n\r\n  listClickFunc = id => {\r\n    const bigPicUrl = this.state.imagesArr.find(image => image.id === id).largeImageURL;\r\n    this.openModal(bigPicUrl);\r\n  };\r\n\r\n  openModal = item => {\r\n    this.setState({ modalUrl: item, openModal: true });\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n  };\r\n\r\n  closeModal = e => {\r\n    if (e.target === e.currentTarget || e.code === \"Escape\") this.setState({ modalUrl: \"\", openModal: false });\r\n    window.removeEventListener(\"keydown\", this.closeModal);\r\n  };\r\n\r\n  render() {\r\n    const imageList = this.state.imagesArr.map(image => (\r\n      <ImageGalleryItem\r\n        key={image.id}\r\n        webformatURL={image.webformatURL}\r\n        queryName={this.state.query}\r\n        clickFunk={() => {\r\n          this.listClickFunc(image.id);\r\n        }}\r\n      />\r\n    ));\r\n\r\n    if (this.state.activePage !== 1) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\"\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Searchbar setQuery={this.onSearch} />\r\n        <ImageGallery>{imageList}</ImageGallery>\r\n        {this.state.imagesArr.length && this.state.isLoaded ? <Button clickFunction={this.onLoadMore} /> : \"\"}\r\n        {!this.state.isLoaded && <SetLoader />}\r\n        {this.state.openModal && <Modal image={this.state.modalUrl} text={this.state.query} clickFunk={this.closeModal} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}